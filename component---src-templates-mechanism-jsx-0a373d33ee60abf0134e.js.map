{"version":3,"file":"component---src-templates-mechanism-jsx-0a373d33ee60abf0134e.js","mappings":"2GAKA,IACIA,EAAW,aAGXC,EAAY,GACZC,EAAU,OACVC,EAAc,+LAClBC,EAAQ,GAAa,CACnBC,OARW,MASXL,SAAUA,EACVM,KAAM,CARI,IACC,IAOWL,EAAWC,EAASC,IAE5CC,EAAQ,GAAcA,EAAQ,I,wGCuC9B,IAvCiB,SAAC,GAA6B,IAA3BG,EAA0B,EAA1BA,KACZC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAOpD,OACE,gBAAC,IAAD,CAAMC,UAAWC,EAAAA,IACf,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKG,OAAOC,KAAMC,UAAU,mBACtC,gBAAC,SAAD,CAAWA,UAAWC,EAAAA,IACpB,gBAAC,IAAD,CAAKD,UAAU,SACb,gBAAC,IAAD,CAAKI,GAAI,EAAGJ,UAAU,gBACpB,gBAAC,EAAAK,EAAD,CACEC,OAAOC,EAAAA,EAAAA,GAASZ,EAAKE,YAAYW,cACjCR,UAAWC,EAAAA,GACXQ,IAAI,WAGR,gBAAC,IAAD,CAAKL,GAAI,IACP,uBAAKJ,UAAU,mDACb,0BAAKJ,GACL,uBAAKI,UAAWC,EAAAA,IACbN,EAAKE,YAAYa,WAAWC,KAtBvB,SAACC,GAAD,OAChB,gBAAC,IAAD,CAAOC,IAAKD,EAAKZ,UAAWC,EAAAA,GAAca,GAAG,aAC1CF,OAsBK,yBAAIjB,EAAKE,YAAYkB,aACrB,6BACGpB,EAAKE,YAAYmB,OADpB,KAC8B,IAC5B,wBAAMhB,UAAU,gBAAgBL,EAAKE,YAAYoB,c,kICiCjE,UApEkB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAClCxB,EAAUwB,EAAKC,KAAKC,aAApB1B,MACN2B,EAAeL,EAAYM,UADvB,MACsC5B,EAE5C,OACE,gBAAC,IAAD,CAAQuB,SAAUA,EAAUvB,MAAOA,GACjC,gBAAC,IAAD,KACE,6BAAQ2B,IAGV,gBAAC,IAAD,CAAWvB,UAAU,QACnB,gBAAC,IAAD,CAAKA,UAAU,aACb,gBAAC,IAAD,CAAKyB,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,sBAAI3B,UAAU,aAAakB,EAAYM,WACvC,sBAAIxB,UAAU,QACZ,gBAAC,EAAAE,KAAD,CAAMC,GAAG,cAAcH,UAAU,cAC/B,gBAAC,IAAD,CAAiBN,KAAMkC,EAAAA,GAAa5B,UAAU,SADhD,6BAKDoB,EAAKS,OAAOC,MAAMnB,KAAI,SAAAhB,GAAI,OACzB,gBAAC,IAAD,CAAUkB,IAAKlB,EAAKoC,KAAKlC,YAAYD,MAAOD,KAAMA,EAAKoC,gB,8KC/B9D,IAKIC,EAAW,oCACXC,EAAY,qCACZC,EAAe,yCACfC,EAAc,wCACdzB,EAAa,qCACb0B,EAAQ","sources":["webpack://dudexpress/./node_modules/@fortawesome/free-solid-svg-icons/faAngleLeft.js","webpack://dudexpress/./src/components/misc/GameCard.tsx","webpack://dudexpress/./src/templates/Mechanism.jsx","webpack://dudexpress/./src/components/misc/GameCard.module.scss"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar prefix = 'fas';\nvar iconName = 'angle-left';\nvar width = 256;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f104';\nvar svgPathData = 'M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z';\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [width, height, ligatures, unicode, svgPathData]\n};\nexports.faAngleLeft = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Card from \"react-bootstrap/Card\"\nimport * as styles from \"./GameCard.module.scss\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { SimpleFrontmatter } from \"../../types\"\nimport Badge from \"react-bootstrap/Badge\"\n\ninterface GameCardProps {\n  post: {\n    frontmatter: SimpleFrontmatter\n    fields: any\n  }\n}\n\nconst GameCard = ({ post }: GameCardProps) => {\n  const title = post.frontmatter.title || post.fields.slug,\n    rendermechanism = (mec: string) => (\n      <Badge key={mec} className={styles.badge} bg=\"secondary\">\n        {mec}\n      </Badge>\n    )\n\n  return (\n    <Card className={styles.gameCard}>\n      <Link to={post.fields.slug} className=\"stretched-link\" />\n      <Card.Body className={styles.gameCardBody}>\n        <Row className=\"w-100\">\n          <Col md={2} className=\"mb-3 mb-md-0\">\n            <GatsbyImage\n              image={getImage(post.frontmatter.featureImage)!}\n              className={styles.gameCardImg}\n              alt=\"cover\"\n            />\n          </Col>\n          <Col md={10}>\n            <div className=\"d-flex flex-column justify-content-center h-100\">\n              <h4>{title}</h4>\n              <div className={styles.mechanisms}>\n                {post.frontmatter.mechanisms.map(rendermechanism)}\n              </div>\n              <p>{post.frontmatter.description}</p>\n              <small>\n                {post.frontmatter.writer} ‚óè{\" \"}\n                <span className=\"release-date\">{post.frontmatter.date}</span>\n              </small>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default GameCard\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Container from \"react-bootstrap/Container\"\nimport GameCard from \"../components/misc/GameCard\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons/faAngleLeft\"\nimport { Helmet } from \"react-helmet\"\n\nconst Mechanism = ({ pageContext, location, data }) => {\n  const { title } = data.site.siteMetadata,\n    metaTitle = `${pageContext.mechanism} | ${title}`\n\n  return (\n    <Layout location={location} title={title}>\n      <Helmet>\n        <title>{metaTitle}</title>\n      </Helmet>\n\n      <Container className=\"mb-5\">\n        <Row className=\"game-list\">\n          <Col lg={{ span: 8, offset: 2 }}>\n            <h1 className=\"mt-5 mb-1\">{pageContext.mechanism}</h1>\n            <h6 className=\"mb-5\">\n              <Link to=\"/mechanisms\" className=\"text-muted\">\n                <FontAwesomeIcon icon={faAngleLeft} className=\"me-1\" />\n                vedi tutte le meccaniche\n              </Link>\n            </h6>\n            {data.allMdx.edges.map(post => (\n              <GameCard key={post.node.frontmatter.title} post={post.node} />\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const mechanismQuery = graphql`\n  query mechanismQuery($ids: [String]!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      filter: { id: { in: $ids } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YYYY\")\n            writer\n            title\n            description\n            mechanisms\n            featureImage {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 330\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Mechanism\n","// extracted by mini-css-extract-plugin\nexport var mainContent = \"GameCard-module--main-content--beN8j\";\nexport var gatsbyRespImageWrapper = \"GameCard-module--gatsby-resp-image-wrapper--QaZSZ\";\nexport var gatsbyRespImageImage = \"GameCard-module--gatsby-resp-image-image--Zv5-R\";\nexport var gatsbyRespImageBackgroundImage = \"GameCard-module--gatsby-resp-image-background-image--Btkrm\";\nexport var readMorePosts = \"GameCard-module--read-more-posts--NmFCg\";\nexport var gameCard = \"GameCard-module--game-card--tW3ZY\";\nexport var weegaCard = \"GameCard-module--weega-card--qoeF4\";\nexport var gameCardBody = \"GameCard-module--game-card-body--OCRkq\";\nexport var gameCardImg = \"GameCard-module--game-card-img--oFerg\";\nexport var mechanisms = \"GameCard-module--mechanisms--lZBZD\";\nexport var badge = \"GameCard-module--badge--rDo+y\";"],"names":["iconName","ligatures","unicode","svgPathData","exports","prefix","icon","post","title","frontmatter","fields","slug","className","styles","Link","to","md","G","image","getImage","featureImage","alt","mechanisms","map","mec","key","bg","description","writer","date","pageContext","location","data","site","siteMetadata","metaTitle","mechanism","lg","span","offset","faAngleLeft","allMdx","edges","node","gameCard","weegaCard","gameCardBody","gameCardImg","badge"],"sourceRoot":""}