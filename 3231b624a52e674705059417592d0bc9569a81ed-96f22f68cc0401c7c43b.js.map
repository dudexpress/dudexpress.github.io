{"version":3,"file":"3231b624a52e674705059417592d0bc9569a81ed-96f22f68cc0401c7c43b.js","mappings":"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","sources":["webpack://dudexpress/./node_modules/react-bootstrap/esm/Badge.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/CardImg.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/CardHeaderContext.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/CardHeader.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/Card.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/Col.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/Row.js","webpack://dudexpress/./node_modules/react-bootstrap/esm/divWithClassName.js","webpack://dudexpress/../src/image-utils.ts","webpack://dudexpress/../src/components/hooks.ts","webpack://dudexpress/../src/components/picture.tsx","webpack://dudexpress/../src/components/layout-wrapper.tsx","webpack://dudexpress/../src/components/placeholder.tsx","webpack://dudexpress/../src/components/main-image.tsx","webpack://dudexpress/../src/components/gatsby-image.browser.tsx","webpack://dudexpress/../src/components/gatsby-image.server.tsx","webpack://dudexpress/../src/components/static-image.server.tsx","webpack://dudexpress/../src/components/static-image.tsx","webpack://dudexpress/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://dudexpress/./src/components/misc/GameCard.tsx","webpack://dudexpress/./src/components/misc/GameCard.module.scss"],"sourcesContent":["import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"bg\", \"pill\", \"text\", \"className\", \"as\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    bg = _ref.bg,\n    pill = _ref.pill,\n    text = _ref.text,\n    className = _ref.className,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'span' : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, prefix, pill && \"rounded-pill\", text && \"text-\".concat(text), bg && \"bg-\".concat(bg))\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    variant = _ref.variant,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'img' : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, _objectSpread({\n    ref: ref,\n    className: classNames(variant ? \"\".concat(prefix, \"-\").concat(variant) : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CardHeader = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  var contextValue = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix\n    };\n  }, [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n      ref: ref\n    }, props), {}, {\n      className: classNames(className, prefix)\n    }))\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    bg = _ref.bg,\n    text = _ref.text,\n    border = _ref.border,\n    body = _ref.body,\n    children = _ref.children,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames(className, prefix, bg && \"bg-\".concat(bg), text && \"text-\".concat(text), border && \"border-\".concat(border)),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  }));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import _slicedToArray from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"as\", \"bsPrefix\", \"className\"],\n  _excluded2 = [\"className\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol(_ref) {\n  var as = _ref.as,\n    bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    props = _objectWithoutProperties(_ref, _excluded);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  var breakpoints = useBootstrapBreakpoints();\n  var spans = [];\n  var classes = [];\n  breakpoints.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n    if (typeof propValue === 'object' && propValue != null) {\n      span = propValue.span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n    var infix = brkPoint !== 'xs' ? \"-\".concat(brkPoint) : '';\n    if (span) spans.push(span === true ? \"\".concat(bsPrefix).concat(infix) : \"\".concat(bsPrefix).concat(infix, \"-\").concat(span));\n    if (order != null) classes.push(\"order\".concat(infix, \"-\").concat(order));\n    if (offset != null) classes.push(\"offset\".concat(infix, \"-\").concat(offset));\n  });\n  return [_objectSpread(_objectSpread({}, props), {}, {\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }), {\n    as: as,\n    bsPrefix: bsPrefix,\n    spans: spans\n  }];\n}\nvar Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (props, ref) {\n  var _useCol = useCol(props),\n    _useCol2 = _slicedToArray(_useCol, 2),\n    _useCol2$ = _useCol2[0],\n    className = _useCol2$.className,\n    colProps = _objectWithoutProperties(_useCol2$, _excluded2),\n    _useCol2$2 = _useCol2[1],\n    _useCol2$2$as = _useCol2$2.as,\n    Component = _useCol2$2$as === void 0 ? 'div' : _useCol2$2$as,\n    bsPrefix = _useCol2$2.bsPrefix,\n    spans = _useCol2$2.spans;\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, colProps), {}, {\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var breakpoints = useBootstrapBreakpoints();\n  var sizePrefix = \"\".concat(decoratedBsPrefix, \"-cols\");\n  var classes = [];\n  breakpoints.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n    var infix = brkPoint !== 'xs' ? \"-\".concat(brkPoint) : '';\n    if (cols != null) classes.push(\"\".concat(sizePrefix).concat(infix, \"-\").concat(cols));\n  });\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nexport default Row;","import _defineProperty from \"/Users/death/repos/dudexpress.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, p), {}, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Card from \"react-bootstrap/Card\"\nimport * as styles from \"./GameCard.module.scss\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { SimpleFrontmatter } from \"../../types\"\nimport Badge from \"react-bootstrap/Badge\"\nimport classnames from \"classnames\"\n\ninterface GameCardProps {\n  post: {\n    frontmatter: SimpleFrontmatter\n    fields: any\n  }\n  className?: string\n}\n\nconst GameCard = ({ post, className }: GameCardProps) => {\n  const title = post.frontmatter.title || post.fields.slug,\n    rendermechanism = (mec: string) => (\n      <Badge key={mec} className={styles.badge} bg=\"secondary\">\n        {mec}\n      </Badge>\n    )\n\n  const mechanisms = post.frontmatter.mechanisms && (\n    <div className={styles.mechanisms}>\n      {post.frontmatter.mechanisms.map(rendermechanism)}\n    </div>\n  )\n\n  return (\n    <Card className={classnames(styles.gameCard, className)}>\n      <Link to={post.fields.slug} className=\"stretched-link\" />\n      <Card.Body className={styles.gameCardBody}>\n        <Row className=\"w-100\">\n          <Col md={2} className=\"mb-3 mb-md-0\">\n            <GatsbyImage\n              image={getImage(post.frontmatter.featureImage)!}\n              className={styles.gameCardImg}\n              alt=\"cover\"\n            />\n          </Col>\n          <Col md={10}>\n            <div className=\"d-flex flex-column justify-content-center h-100\">\n              <h4>{title}</h4>\n              {mechanisms}\n              <p>{post.frontmatter.description}</p>\n              <small>\n                {post.frontmatter.writer} ●{\" \"}\n                <span className=\"release-date\">{post.frontmatter.date}</span>\n              </small>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default GameCard\n","// extracted by mini-css-extract-plugin\nexport var badge = \"GameCard-module--badge--rDo+y\";\nexport var gameCard = \"GameCard-module--game-card--tW3ZY\";\nexport var gameCardBody = \"GameCard-module--game-card-body--OCRkq\";\nexport var gameCardDark = \"GameCard-module--game-card-dark--rRmq6\";\nexport var gameCardImg = \"GameCard-module--game-card-img--oFerg\";\nexport var gatsbyRespImageBackgroundImage = \"GameCard-module--gatsby-resp-image-background-image--Btkrm\";\nexport var gatsbyRespImageImage = \"GameCard-module--gatsby-resp-image-image--Zv5-R\";\nexport var gatsbyRespImageWrapper = \"GameCard-module--gatsby-resp-image-wrapper--QaZSZ\";\nexport var mainContent = \"GameCard-module--main-content--beN8j\";\nexport var mechanisms = \"GameCard-module--mechanisms--lZBZD\";\nexport var readMorePosts = \"GameCard-module--read-more-posts--NmFCg\";\nexport var weegaCard = \"GameCard-module--weega-card--qoeF4\";"],"names":["_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Badge","_ref","ref","bsPrefix","bg","pill","text","className","_ref$as","as","Component","props","prefix","concat","displayName","defaultProps","CardImg","variant","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","border","body","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_excluded2","Col","_useCol","breakpoints","spans","classes","brkPoint","span","offset","order","propValue","infix","useCol","_useCol2","_useCol2$","colProps","_useCol2$2","_useCol2$2$as","Row","decoratedBsPrefix","sizePrefix","cols","p","N","HTMLImageElement","prototype","W","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","j","r","u","loading","shouldLoad","style","opacity","O","n","s","o","l","backgroundColor","width","height","position","top","left","bottom","right","objectFit","objectPosition","d","transition","V","z","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","D","c","q","H","P","srcSet","_t$alt","decoding","G","_t$sources","sources","_t$shouldLoad","sizes","map","_ref6","media","type","propTypes","B","F","Error","U","Q","ee","Y","_len","Array","_key","h","X","image","J","Z","K","Set","te","_e$as","g","class","onStartLoad","m","onLoad","f","onError","w","y","b","v","E","M","S","k","$","I","JSON","stringify","x","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","ne","se","oe","__imageData","__error","console","warn","camelCase","input","options","isArray","TypeError","pascalCase","trim","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","_","p1","charAt","module","exports","post","title","frontmatter","fields","slug","mechanisms","React","styles","mec","classnames","to","md","GatsbyImage","getImage","featureImage","description","writer","date","badge","gameCard","gameCardBody","gameCardDark","gameCardImg","weegaCard"],"sourceRoot":""}