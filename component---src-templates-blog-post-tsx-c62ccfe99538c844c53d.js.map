{"version":3,"file":"component---src-templates-blog-post-tsx-c62ccfe99538c844c53d.js","mappings":"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","sources":["webpack://dudexpress/./src/components/boxes/BaseBox.tsx","webpack://dudexpress/./src/components/boxes/BaseBox.module.scss","webpack://dudexpress/./src/components/boxes/DurationBox.tsx","webpack://dudexpress/./src/components/boxes/HypeBox.tsx","webpack://dudexpress/./src/components/boxes/PlayerCountBox.tsx","webpack://dudexpress/./src/components/boxes/PlayerCountBox.module.scss","webpack://dudexpress/./src/components/boxes/ScoreBox.tsx","webpack://dudexpress/./src/components/boxes/WeightBox.tsx","webpack://dudexpress/./src/components/sidebar/Mechanisms.module.scss","webpack://dudexpress/./src/components/sidebar/Mechanisms.tsx","webpack://dudexpress/./src/components/blogPostAreas/BlogPostBoxes.tsx","webpack://dudexpress/./src/components/sidebar/SidebarVote.tsx","webpack://dudexpress/./src/components/sidebar/SidebarVote.module.scss","webpack://dudexpress/./src/components/sidebar/SidebarVotes.tsx","webpack://dudexpress/./src/components/sidebar/Sleeves.tsx","webpack://dudexpress/./src/components/sidebar/Disclainer.tsx","webpack://dudexpress/./src/components/blogPostAreas/BlogPostSidebar.tsx","webpack://dudexpress/./src/components/misc/OriginalReviewLink.tsx","webpack://dudexpress/./src/components/sections/Panoramic.tsx","webpack://dudexpress/./src/templates/BlogPost.tsx"],"sourcesContent":["import classnames from \"classnames\"\nimport React from \"react\"\nimport Card from \"react-bootstrap/Card\"\nimport * as style from \"./BaseBox.module.scss\"\n\ninterface BaseBoxProps {\n  title: string\n  footer?: React.ReactNode\n  small?: boolean\n  noHeight?: boolean\n  noFooter?: boolean\n}\n\nexport default class BaseBox extends React.PureComponent<\n  React.PropsWithChildren<BaseBoxProps>\n> {\n  public render(): React.ReactNode {\n    return (\n      <Card\n        className={classnames(style.baseBox, {\n          [style.small]: this.props.small,\n          \"h-auto\": this.props.noHeight,\n        })}\n      >\n        <Card.Body className={style.cardBody}>\n          <Card.Title\n            className={classnames(style.cardTitle, {\n              [style.cardTitleSmall]: this.props.small,\n            })}\n          >\n            {this.props.title}\n          </Card.Title>\n          <Card.Text\n            className={classnames(style.cardText, {\n              [style.cardTextSmall]: this.props.small,\n              [style.cardTextNoHeight]: this.props.noHeight,\n            })}\n          >\n            {this.props.children}\n          </Card.Text>\n          <Card.Footer\n            className={classnames(style.cardFooter, {\n              [style.cardFooterSmall]: this.props.small,\n            })}\n          >\n            {this.props.footer}\n          </Card.Footer>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var baseBox = \"BaseBox-module--base-box--GL-Tl\";\nexport var cardBody = \"BaseBox-module--card-body--tKc-v\";\nexport var cardFooter = \"BaseBox-module--card-footer--nS4UE\";\nexport var cardFooterSmall = \"BaseBox-module--card-footer-small--eSWvR\";\nexport var cardText = \"BaseBox-module--card-text--kZv0Q\";\nexport var cardTextNoHeight = \"BaseBox-module--card-text-no-height--U9o2N\";\nexport var cardTextSmall = \"BaseBox-module--card-text-small--h6FSw\";\nexport var cardTitle = \"BaseBox-module--card-title--fJeU9\";\nexport var cardTitleSmall = \"BaseBox-module--card-title-small--2Hw1W\";\nexport var gatsbyRespImageBackgroundImage = \"BaseBox-module--gatsby-resp-image-background-image--87Iac\";\nexport var gatsbyRespImageImage = \"BaseBox-module--gatsby-resp-image-image--VJDtG\";\nexport var gatsbyRespImageWrapper = \"BaseBox-module--gatsby-resp-image-wrapper--XfKwK\";\nexport var mainContent = \"BaseBox-module--main-content--Ux1nE\";\nexport var readMorePosts = \"BaseBox-module--read-more-posts--LnnhF\";\nexport var small = \"BaseBox-module--small--pPcEs\";","import React from \"react\"\nimport BaseBox from \"./BaseBox\"\n\ninterface DurationBoxProps {\n  value: string\n  officialValue: string\n  small?: boolean\n}\n\nexport default class DurationBox extends React.PureComponent<DurationBoxProps> {\n  private renderFooter(): React.ReactNode {\n    return \"Dichiarati: \" + this.props.officialValue\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <BaseBox\n        title=\"Durata\"\n        footer={this.renderFooter()}\n        small={this.props.small}\n      >\n        {this.props.value}\n      </BaseBox>\n    )\n  }\n}\n","import React from \"react\"\nimport BaseBox from \"./BaseBox\"\n\ninterface HypeBoxProps {\n  value: number\n  small?: boolean\n}\n\nexport default class HypeBox extends React.PureComponent<HypeBoxProps> {\n  private height: number = this.props.small ? 30 : 45\n\n  private renderFullHearts(amount: number): React.ReactNode {\n    return [...new Array(amount)].map((_, idx) => (\n      <img\n        key={`full-` + idx}\n        src={`../../stars/full.png`}\n        alt=\"heart\"\n        height={this.height}\n      />\n    ))\n  }\n\n  private renderEmtpyHearts(amount: number): React.ReactNode {\n    return [...new Array(amount)].map((_, idx) => (\n      <img\n        key={`empty-` + idx}\n        src={`../../stars/empty.png`}\n        alt=\"heart\"\n        height={this.height}\n      />\n    ))\n  }\n\n  private renderHalfHeart(toRender: boolean): React.ReactNode {\n    if (!toRender) {\n      return null\n    }\n\n    return (\n      <img\n        key=\"half\"\n        src={`../../stars/half.png`}\n        alt=\"heart\"\n        height={this.height}\n      />\n    )\n  }\n\n  private renderHearts(): React.ReactNode {\n    let fullHearts: number = Math.floor(this.props.value / 2),\n      withHalf: boolean = this.props.value % 2 === 1,\n      emptyHearts: number = 5 - fullHearts - (withHalf ? 1 : 0)\n\n    return (\n      <>\n        {this.renderFullHearts(fullHearts)}\n        {this.renderHalfHeart(withHalf)}\n        {this.renderEmtpyHearts(emptyHearts)}\n      </>\n    )\n  }\n\n  private renderFooter(): React.ReactNode {\n    return `${this.props.value} / 10`\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <BaseBox\n        title=\"Hype\"\n        footer={this.renderFooter()}\n        small={this.props.small}\n      >\n        {this.renderHearts()}\n      </BaseBox>\n    )\n  }\n}\n","import React from \"react\"\nimport BaseBox from \"./BaseBox\"\nimport * as style from \"./PlayerCountBox.module.scss\"\n\ninterface PlayerCountBoxProps {\n  value: number\n  officialValue: string\n  small?: boolean\n}\n\nexport default class PlayerCountBox extends React.PureComponent<PlayerCountBoxProps> {\n  private getHeight(amount: number): number {\n    if (amount <= 4) {\n      return this.props.small ? 30 : 50\n    }\n\n    return this.props.small ? 25 : 40\n  }\n\n  private renderFooter(): React.ReactNode {\n    return \"Dichiarati: \" + this.props.officialValue\n  }\n\n  private getRandomNumbers(amount: number): number[] {\n    let array = [...new Array(16)].map((_, x) => x + 1)\n\n    return array\n      .slice()\n      .sort(() => Math.random() - 0.5)\n      .slice(0, amount)\n  }\n\n  public render(): React.ReactNode {\n    const height = this.getHeight(this.props.value)\n\n    return (\n      <BaseBox\n        title=\"Giocatori\"\n        footer={this.renderFooter()}\n        small={this.props.small}\n      >\n        <span className={style.playerCount}>\n          {this.getRandomNumbers(this.props.value).map((id: number) => (\n            <img\n              key={id}\n              src={`../../gamers/${id}.png`}\n              alt={`gamer ${id}`}\n              height={height}\n            />\n          ))}\n        </span>\n      </BaseBox>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var playerCount = \"PlayerCountBox-module--player-count--uSxhc\";","import React from \"react\"\nimport BaseBox from \"./BaseBox\"\n\ninterface ScoreBoxProps {\n  value: number\n}\n\nexport default class ScoreBox extends React.PureComponent<ScoreBoxProps> {\n  static height = 45\n  static getLabel(value: number): React.ReactNode {\n    switch (value) {\n      case 10:\n        return \"Immancabile\"\n      case 9:\n        return \"Eccellente\"\n      case 8:\n        return \"Da avere\"\n      case 7:\n        return \"Da provare\"\n      case 6:\n        return \"Si difende\"\n      case 5:\n        return \"C'è di meglio\"\n      default:\n        return \"Meh\"\n    }\n  }\n\n  private renderFullHearts(amount: number): React.ReactNode {\n    return [...new Array(amount)].map((_, idx) => (\n      <img\n        key={`full-` + idx}\n        src={`../../hearts/full.png`}\n        alt=\"heart\"\n        height={ScoreBox.height}\n      />\n    ))\n  }\n\n  private renderEmtpyHearts(amount: number): React.ReactNode {\n    return [...new Array(amount)].map((_, idx) => (\n      <img\n        key={`empty-` + idx}\n        src={`../../hearts/empty.png`}\n        alt=\"heart\"\n        height={ScoreBox.height}\n      />\n    ))\n  }\n\n  private renderHalfHeart(toRender: boolean): React.ReactNode {\n    if (!toRender) {\n      return null\n    }\n\n    return (\n      <img\n        key=\"half\"\n        src={`../../hearts/half.png`}\n        alt=\"heart\"\n        height={ScoreBox.height}\n      />\n    )\n  }\n\n  private renderHearts(): React.ReactNode {\n    let fullHearts: number = Math.floor(this.props.value / 2),\n      withHalf: boolean = this.props.value % 2 === 1,\n      emptyHearts: number = 5 - fullHearts - (withHalf ? 1 : 0)\n\n    return (\n      <>\n        {this.renderFullHearts(fullHearts)}\n        {this.renderHalfHeart(withHalf)}\n        {this.renderEmtpyHearts(emptyHearts)}\n      </>\n    )\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <BaseBox title=\"Punteggio\" footer={ScoreBox.getLabel(this.props.value)}>\n        {this.renderHearts()}\n      </BaseBox>\n    )\n  }\n}\n","import { faFeather, faWeightHanging } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React from \"react\"\nimport { PostWeigth } from \"../../types\"\nimport BaseBox from \"./BaseBox\"\n\ninterface WeightBoxProps {\n  value: PostWeigth\n  small?: boolean\n}\n\nexport default class WeightBox extends React.PureComponent<WeightBoxProps> {\n  static getLabel(value: number): string | null {\n    switch (value) {\n      case 1:\n        return \"Leggerissimo\"\n      case 2:\n        return \"Leggero\"\n      case 3:\n        return \"Medio\"\n      case 4:\n        return \"Pesantino\"\n      case 5:\n        return \"Pesantissimo\"\n      default:\n        return null\n    }\n  }\n\n  private renderContent(): React.ReactNode {\n    return (\n      <img\n        src={`../../weight/${this.props.value}.png`}\n        alt=\"weight\"\n        height={this.props.small ? 45 : 75}\n      />\n    )\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <BaseBox\n        title=\"Impegno richiesto\"\n        footer={WeightBox.getLabel(this.props.value)}\n        small={this.props.small}\n      >\n        {this.renderContent()}\n      </BaseBox>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var badge = \"Mechanisms-module--badge--CIGWe\";\nexport var gatsbyRespImageBackgroundImage = \"Mechanisms-module--gatsby-resp-image-background-image--v5XkX\";\nexport var gatsbyRespImageImage = \"Mechanisms-module--gatsby-resp-image-image--CcQAx\";\nexport var gatsbyRespImageWrapper = \"Mechanisms-module--gatsby-resp-image-wrapper--JzhsJ\";\nexport var mainContent = \"Mechanisms-module--main-content--I2wGF\";\nexport var mechanisms = \"Mechanisms-module--mechanisms--iWatp\";\nexport var readMorePosts = \"Mechanisms-module--read-more-posts--suzOa\";","import React from \"react\"\nimport Badge from \"react-bootstrap/Badge\"\nimport * as styles from \"./Mechanisms.module.scss\"\nimport { Link } from \"gatsby\"\nimport slugify from \"slugify\"\n\ninterface MechanismsProps {\n  title?: string\n  values: string[]\n  withMore?: boolean\n  small?: boolean\n}\n\nexport default class Mechanisms extends React.PureComponent<MechanismsProps> {\n  private renderTag(tag: string): React.ReactNode {\n    return (\n      <Link key={tag} to={`/mechanisms/${slugify(tag, { lower: true })}`}>\n        <Badge key={tag} className={styles.badge} bg=\"secondary me-1 mb-1\">\n          {tag}\n        </Badge>\n      </Link>\n    )\n  }\n\n  private renderMore(): React.ReactNode {\n    if (!this.props.withMore) {\n      return null\n    }\n\n    return (\n      <Link to=\"/mechanisms\" className=\"text-muted\">\n        e molte altre...\n      </Link>\n    )\n  }\n\n  public render(): React.ReactNode {\n    if (this.props.small) {\n      return (\n        <div className=\"text-center text-lg-start\">\n          <div\n            className={\n              styles.mechanisms + \" flex-row justify-content-center flex-wrap\"\n            }\n          >\n            {this.props.values.map(this.renderTag)}\n          </div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"mb-5 text-center text-lg-start\">\n        <h5 className=\"fw-bold\">{this.props.title ?? \"Meccaniche\"}</h5>\n        <div className={styles.mechanisms}>\n          {this.props.values.map(this.renderTag)}\n          {this.renderMore()}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport { Frontmatter } from \"../../types\"\nimport WeightBox from \"../boxes/WeightBox\"\nimport PlayerCountBox from \"../boxes/PlayerCountBox\"\nimport DurationBox from \"../boxes/DurationBox\"\nimport ScoreBox from \"../boxes/ScoreBox\"\nimport HypeBox from \"../boxes/HypeBox\"\n\nexport default class BlogPostBoxes extends React.PureComponent<Frontmatter> {\n  private renderScoreBox(): React.ReactNode {\n    if (\n      this.props.gamefound_url != null ||\n      this.props.kickstarter_url != null ||\n      (this.props.weega_future && this.props.weega_url != null)\n    ) {\n      return <HypeBox value={this.props.score} />\n    }\n    return <ScoreBox value={this.props.score} />\n  }\n\n  public render(): React.ReactNode {\n    return (\n      <Container>\n        <Row className=\"welcome-boxes\">\n          <Col md={6} xl={3}>\n            {this.renderScoreBox()}\n          </Col>\n          <Col md={6} xl={3}>\n            <DurationBox\n              value={this.props.playing_time}\n              officialValue={this.props.playing_time_official}\n            />\n          </Col>\n          <Col md={6} xl={3}>\n            <WeightBox value={this.props.weight} />\n          </Col>\n          <Col md={6} xl={3}>\n            <PlayerCountBox\n              value={this.props.player_count}\n              officialValue={this.props.player_count_official}\n            />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React from \"react\"\n\nimport * as styles from \"./SidebarVote.module.scss\"\n\nexport interface SidebarVoteProps {\n  title: string\n  value: number\n}\n\nexport default class SidebarVote extends React.PureComponent<SidebarVoteProps> {\n  private renderCirles(length: number, sign: string): React.ReactNode {\n    return Array.from({ length }, (_, i) => sign)\n  }\n\n  public render(): React.ReactNode {\n    const emptyCircles = 5 - this.props.value\n\n    return (\n      <div className={styles.sidebarVote}>\n        <h5>{this.props.title}</h5>\n        <p className={styles.values}>\n          {this.renderCirles(this.props.value, \"⬤\")}\n          {this.renderCirles(emptyCircles, \"◯\")}\n        </p>\n      </div>\n    )\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport var gatsbyRespImageBackgroundImage = \"SidebarVote-module--gatsby-resp-image-background-image--qRwW6\";\nexport var gatsbyRespImageImage = \"SidebarVote-module--gatsby-resp-image-image--0RebG\";\nexport var gatsbyRespImageWrapper = \"SidebarVote-module--gatsby-resp-image-wrapper--gH+nc\";\nexport var mainContent = \"SidebarVote-module--main-content--K6NQj\";\nexport var readMorePosts = \"SidebarVote-module--read-more-posts--33LVv\";\nexport var sidebarVote = \"SidebarVote-module--sidebar-vote--ElEIe\";\nexport var values = \"SidebarVote-module--values--smfTr\";","import React from \"react\"\nimport SidebarVote, { SidebarVoteProps } from \"./SidebarVote\"\n\ninterface SidebarVotesProps {\n  values: SidebarVoteProps[]\n}\n\nexport default class SidebarVotes extends React.PureComponent<SidebarVotesProps> {\n  private renderItems(): React.ReactNode {\n    return this.props.values.map((value: SidebarVoteProps) => (\n      <SidebarVote key={value.title} {...value} />\n    ))\n  }\n\n  public render(): React.ReactNode {\n    return <div className=\"mb-5\">{this.renderItems()}</div>\n  }\n}\n","import React from \"react\"\nimport { Sleeve } from \"../../types\"\n\ninterface SleevesProps {\n  sleeves: Sleeve[]\n}\n\nexport default class Sleeves extends React.PureComponent<SleevesProps> {\n  private renderSleeve(sleeve: Sleeve): React.ReactNode {\n    return (\n      <li key={sleeve.size}>\n        <strong>{sleeve.size}</strong>: {sleeve.amount} carte\n      </li>\n    )\n  }\n\n  public render(): React.ReactNode {\n    if (this.props.sleeves == null) {\n      return null\n    }\n\n    return (\n      <div className=\"mb-5\">\n        <h5>Bustine protettive</h5>\n        <ul className=\"list-unstyled\">\n          {this.props.sleeves.map(this.renderSleeve)}\n        </ul>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { Frontmatter } from \"../../types\"\n\ntype DisclaimerProps = Pick<\n  Frontmatter,\n  \"kickstarter_url\" | \"gamefound_url\" | \"weega_url\" | \"weega_future\"\n>\n\nexport default class Disclaimer extends React.PureComponent<DisclaimerProps> {\n  public render(): React.ReactNode {\n    if (\n      !(\n        this.props.kickstarter_url != null ||\n        this.props.gamefound_url != null ||\n        (this.props.weega_url != null && this.props.weega_future === true)\n      )\n    ) {\n      return null\n    }\n\n    return (\n      <div className=\"disclaimer mb-5\">\n        <h5>Disclaimer</h5>\n        <small>\n          Vi ricordiamo che state leggendo l'anteprima di un gioco non\n          ancora esistente che i vostri Dudes sono andati a recuperare nelle\n          profondità dello spazio! <br />I voti e i giudizi sono relativi\n          solamente alla copia ricevuta e analizzata grazie ai nostri\n          sofisticatissimi strumenti di laboratorio! <br />\n          Quando avremo a disposizione la copia definitiva provvederemo\n          sicuramente ad aggiornarvi con le nostre opinioni.\n        </small>\n      </div>\n    )\n  }\n}\n","import classnames from \"classnames\"\nimport React from \"react\"\nimport { Frontmatter } from \"../../types\"\nimport SidebarValues from \"../sidebar/SidebarVotes\"\nimport Mechanisms from \"../sidebar/Mechanisms\"\nimport * as style from \"./BlogPostSidebar.module.scss\"\nimport Sleeves from \"../sidebar/Sleeves\"\nimport Stores from \"../sidebar/Stores\"\nimport Disclaimer from \"../sidebar/Disclainer\"\n\nexport default class BlogPostSidebar extends React.PureComponent<Frontmatter> {\n  public render(): React.ReactNode {\n    const className = classnames(style.blogPostSidebar, \"mt-5 mt-md-0\")\n\n    return (\n      <div className={className}>\n        <Stores {...this.props} linkToSpecificGame={true} />\n        <Mechanisms values={this.props.mechanisms} />\n        <SidebarValues values={this.props.sidebar_votes} />\n        <Sleeves sleeves={this.props.sleeves} />\n        <Disclaimer {...this.props} />\n      </div>\n    )\n  }\n}\n","import React from \"react\"\n\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport GameCard from \"../misc/GameCard\"\nimport * as stylesGameCard from \"../misc/GameCard.module.scss\"\nimport BaseSection from \"../sections/BaseSection\"\n\nexport interface AdvisorBitProps {\n  slug: string\n}\n\nexport const OriginalReviewLink = ({\n  slug,\n}: React.PropsWithChildren<AdvisorBitProps>) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx(\n        sort: { fields: [frontmatter___date], order: ASC }\n        filter: { frontmatter: { type: { eq: \"review\" } } }\n      ) {\n        nodes {\n          id\n          body\n          frontmatter {\n            type\n            title\n            description\n            date(formatString: \"DD/MM/YYYYY\")\n            mechanisms\n            writer\n            featureImage {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 330\n                  placeholder: BLURRED\n                  formats: [JPG, WEBP, AVIF]\n                )\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `)\n  const review = data.allMdx.nodes.filter(\n    x => x.fields.slug === `/reviews/${slug}/`\n  )[0]\n\n  return (\n    <BaseSection title={`Espansione di`} trait=\"green\" className=\"mb-4\">\n      <GameCard post={review} className={stylesGameCard.gameCardDark} />\n    </BaseSection>\n  )\n}\n","import BaseSection from \"./BaseSection\"\nimport React from \"react\"\n\nexport default class Panoramic extends React.PureComponent<\n  React.PropsWithChildren<{}>\n> {\n  public render(): React.ReactNode {\n    return (\n      <BaseSection title=\"Panoramica\" trait=\"orange\">\n        {this.props.children}\n      </BaseSection>\n    )\n  }\n}\n","import * as style from \"./BlogPost.module.scss\"\n\nimport { Frontmatter, SimpleFrontmatter, SiteMetadata } from \"../types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport BaseSection from \"../components/sections/BaseSection\"\nimport BlogPostBoxes from \"../components/blogPostAreas/BlogPostBoxes\"\nimport BlogPostHeader from \"../components/blogPostAreas/BlogPostHeader\"\nimport BlogPostSidebar from \"../components/blogPostAreas/BlogPostSidebar\"\nimport Col from \"react-bootstrap/Col\"\nimport Container from \"react-bootstrap/Container\"\nimport Feedback from \"../components/sections/Feedback\"\nimport GameCard from \"../components/misc/GameCard\"\nimport { Helmet } from \"react-helmet\"\nimport Instagram from \"../components/misc/Instagram\"\nimport Layout from \"../components/Layout\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { OriginalReviewLink } from \"../components/misc/OriginalReviewLink\"\nimport { OutboundLink } from \"gatsby-plugin-google-gtag\"\nimport Panoramic from \"../components/sections/Panoramic\"\nimport PostWriter from \"../components/misc/PostWriter\"\nimport RandomLink from \"../components/misc/RandomLink\"\nimport React from \"react\"\nimport Row from \"react-bootstrap/Row\"\nimport Rules from \"../components/sections/Rules\"\nimport Setting from \"../components/sections/Setting\"\nimport Spotify from \"../components/misc/Spoify\"\nimport Youtube from \"../components/misc/Youtube\"\nimport classNames from \"classnames\"\n\nconst BlogPost = ({ data, location }: BlogPostProps) => {\n  const post = data.mdx\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const shortcodes = {\n    Setting,\n    Panoramic,\n    Rules,\n    Feedback,\n    Spotify,\n    Youtube,\n    Instagram,\n    OutboundLink,\n    Link,\n    RandomLink,\n    BaseSection,\n    OriginalReviewLink,\n  }\n\n  const classname = classNames(\"main-content\", style.blogPost),\n    metaTitle = `${post.frontmatter.title} | ${data.site.siteMetadata.title}`,\n    metaDesciption = `${post.frontmatter.description} | Recensione gioco da tavolo ${data.site.siteMetadata.title}`,\n    metaImage =\n      \"https://dudexpress.it\" +\n      post.frontmatter!.featureImage!.childImageSharp!.gatsbyImageData!.images!\n        .fallback!.src\n\n  const structuredJSON = JSON.stringify({\n    \"@context\": \"https://schema.org/\",\n    \"@type\": \"Product\",\n    name: post.frontmatter.title,\n    image: metaImage,\n    review: [\n      {\n        \"@type\": \"Review\",\n        reviewRating: {\n          \"@type\": \"Rating\",\n          ratingValue: post.frontmatter.score,\n          bestRating: \"10\",\n          worstRating: \"0\",\n        },\n        author: {\n          \"@type\": \"Person\",\n          name: post.frontmatter.writer,\n        },\n        datePublished: post.frontmatter.date,\n        publisher: { \"@type\": \"Organization\", name: \"dudexpress\" },\n        reviewBody: post.frontmatter.description,\n      },\n    ],\n  })\n\n  return (\n    <MDXProvider components={shortcodes}>\n      <Layout location={location} title={siteTitle}>\n        <Helmet>\n          <title>{metaTitle}</title>\n          <meta name=\"description\" content={metaDesciption} />\n          <link rel=\"canonical\" href={`https://dudexpress.it/${post.slug}`} />\n          <meta\n            name=\"keywords\"\n            content={`${post.frontmatter.title}, dudexpress, gioco, gioco da tavolo, recensioni, board game, review`}\n          />\n\n          <meta property=\"og:type\" content=\"website\" />\n          <meta property=\"og:title\" content={metaTitle} />\n          <meta property=\"og:description\" content={metaDesciption} />\n          <meta property=\"og:image\" content={metaImage} />\n\n          <meta name=\"twitter:card\" content=\"summary\" />\n          <meta name=\"twitter:title\" content={metaTitle} />\n          <meta name=\"twitter:description\" content={metaDesciption} />\n          <meta name=\"twitter:image\" content={metaImage} />\n\n          <script type=\"application/ld+json\">{structuredJSON}</script>\n        </Helmet>\n\n        <div className=\"blog-post\">\n          <BlogPostHeader frontmatter={post.frontmatter} />\n          <BlogPostBoxes {...post.frontmatter} />\n          <div className={classname}>\n            <Container>\n              <Row>\n                <Col\n                  xs={12}\n                  md={8}\n                  lg={{ span: 7, offset: 1 }}\n                  className=\"base-section-column\"\n                >\n                  <MDXRenderer>{post.body}</MDXRenderer>\n                </Col>\n                <Col md={{ span: 3, offset: 1 }}>\n                  <BlogPostSidebar {...post.frontmatter} />\n                </Col>\n              </Row>\n              <Row>\n                <Col\n                  lg={{ span: 7, offset: 1 }}\n                  className=\"base-section-column\"\n                >\n                  <PostWriter\n                    writerName={post.frontmatter.writer}\n                    asCard={true}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </div>\n        <Container className=\"read-more-posts\">\n          <Row className=\"game-list\">\n            <Col lg={8}>\n              <h2>Potrebbe interessarti anche...</h2>\n              {data.allMdx.nodes.map(post => (\n                <GameCard key={post.frontmatter.title} post={post} />\n              ))}\n            </Col>\n          </Row>\n        </Container>\n      </Layout>\n    </MDXProvider>\n  )\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $readMoreIds: [String]!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    mdx(id: { eq: $id }) {\n      id\n      body\n      slug\n      frontmatter {\n        date(formatString: \"DD/MM/YYYY\")\n        writer\n        title\n        featureImage {\n          childImageSharp {\n            gatsbyImageData(\n              width: 330\n              placeholder: BLURRED\n              formats: [JPG, WEBP, AVIF]\n            )\n          }\n        }\n        description\n        designer\n        publisher\n        score\n        mechanisms\n        weight\n        player_count\n        player_count_official\n        playing_time\n        playing_time_official\n        sidebar_votes {\n          title\n          value\n        }\n        sleeves {\n          amount\n          size\n        }\n        dungeondice_url\n        magicmerchant_url\n        getyourfun_url\n        fantasia_url\n        blasone_url\n        mse_url\n        pandoragames_url\n        weega_url\n        weega_future\n        gamefound_url\n        kickstarter_url\n      }\n    }\n\n    allMdx(filter: { id: { in: $readMoreIds } }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD/MM/YYYY\")\n          writer\n          title\n          featureImage {\n            childImageSharp {\n              gatsbyImageData(\n                width: 330\n                placeholder: BLURRED\n                formats: [JPG, WEBP, AVIF]\n              )\n            }\n          }\n          description\n          mechanisms\n        }\n      }\n    }\n  }\n`\n\nexport interface BlogPostDataProps {\n  site: {\n    siteMetadata: SiteMetadata\n  }\n  mdx: {\n    frontmatter: Frontmatter\n    body: string\n    slug: string\n  }\n  allMdx: {\n    nodes: {\n      frontmatter: SimpleFrontmatter\n      fields: {\n        slug: string\n      }\n    }[]\n  }\n}\n\nexport interface BlogPostProps {\n  data: BlogPostDataProps\n  location: Location\n}\n"],"names":["BaseBox","render","className","classnames","this","props","Card","React","DurationBox","renderFooter","title","footer","small","HypeBox","height","renderFullHearts","Array","key","src","alt","renderEmtpyHearts","renderHalfHeart","renderHearts","fullHearts","Math","value","withHalf","emptyHearts","PlayerCountBox","getHeight","amount","getRandomNumbers","x","array","ScoreBox","getLabel","WeightBox","renderContent","mechanisms","Mechanisms","renderTag","to","slugify","tag","lower","bg","renderMore","styles","values","map","BlogPostBoxes","renderScoreBox","gamefound_url","kickstarter_url","weega_future","weega_url","md","xl","officialValue","SidebarVote","renderCirles","length","emptyCircles","SidebarVotes","renderItems","Sleeves","renderSleeve","sleeve","sleeves","Disclaimer","BlogPostSidebar","style","linkToSpecificGame","OriginalReviewLink","slug","review","useStaticQuery","data","trait","post","stylesGameCard","Panoramic","BlogPost","location","siteTitle","shortcodes","Setting","Rules","Feedback","Spotify","Youtube","Instagram","OutboundLink","Link","RandomLink","BaseSection","classname","classNames","metaTitle","metaDesciption","metaImage","structuredJSON","JSON","name","image","reviewRating","ratingValue","bestRating","worstRating","author","datePublished","publisher","reviewBody","components","content","rel","href","property","type","frontmatter","xs","lg","span","offset","writerName","asCard"],"sourceRoot":""}