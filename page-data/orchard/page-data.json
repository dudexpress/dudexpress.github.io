{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/orchard/",
    "result": {"data":{"site":{"siteMetadata":{"title":"dudexpress"}},"mdx":{"id":"424c373a-510b-5611-9d41-3a0bd47f0b98","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2021-11-18\",\n  \"writer\": \"Tia\",\n  \"title\": \"Orchard\",\n  \"description\": \"Crea il micro frutteto più fruttuoso, ma attenzione alla frutta marcia\",\n  \"designer\": \"Mark Tuck\",\n  \"publisher\": \"GateOnGames\",\n  \"score\": 3,\n  \"mechanisms\": [\"Melding and Splaying\", \"Pattern Building\", \"Solo / Solitaire Game\", \"Tile Placement\"],\n  \"weight\": 1,\n  \"design\": 2,\n  \"player_count\": 1,\n  \"playing_time\": \"10min\",\n  \"unboxing_youtbe_id\": \"iwzA_s9gTnQ\",\n  \"sidebar_votes\": [{\n    \"title\": \"Fun\",\n    \"value\": 3\n  }, {\n    \"title\": \"Gameplay\",\n    \"value\": 1\n  }, {\n    \"title\": \"Game flow\",\n    \"value\": 4\n  }, {\n    \"title\": \"Tema\",\n    \"value\": 2\n  }, {\n    \"title\": \"Portabilità\",\n    \"value\": 5\n  }]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Setting = makeShortcode(\"Setting\");\nvar ImageSection = makeShortcode(\"ImageSection\");\nvar Rules = makeShortcode(\"Rules\");\nvar Feedback = makeShortcode(\"Feedback\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Setting, {\n    mdxType: \"Setting\"\n  }, \"Orchard \\xE8 un gioco da 1 giocatore in cui bisogner\\xE0 giostrare 9 carte composte da 6 simboli di 3 colori diversi in modo da ottenere il massimo punteggio possibile. Come si ottiene per\\xF2 questo punteggio? Ogni carta messa sovrapporr\\xE0 uno o pi\\xF9 simboli e se essi sono uguali la sovrapposizione sar\\xE0 valida ed essa far\\xE0 aumentare il punteggio del proprio Orchard (== frutteto ndt) grazie ad un contatore (5 per colore). Il problema? Ogni volta che si sovrapporranno simboli diversi si otterr\\xE0 un segnalino frutta marcia che a fine partita varr\\xE0 punti negativi. La partita finisce quando le 9 carte sono esaurite o quando il giocatore non pu\\xF2 pi\\xF9 disporre contatori punti positivi o negativi.\"), mdx(ImageSection, {\n    mdxType: \"ImageSection\"\n  }), mdx(Rules, {\n    mdxType: \"Rules\"\n  }, \"RULES DI Orchard! Orchard! Orchard!\"), mdx(ImageSection, {\n    mdxType: \"ImageSection\"\n  }), mdx(Feedback, {\n    mdxType: \"Feedback\"\n  }, \"Orchard \\xE8 uno di quei magnifici giochi che non dovrebbero mancare nella collezione di un Solo-gamer. in quindici minuti si fa una partita e salvando la sequenza in cui viene formato il mazzo (ogni carta \\xE8 numerata) Orchard non sar\\xE0 un semplice beat-your-own-score fine a s\\xE8 stesso, ma dar\\xE0 anche la possibilit\\xE0 al giocatore di poter migliorare la propria strategia fino ad arrivare al massimo punteggio ottenibile per ogni sequenza di 9 carte.\", mdx(\"br\", null), \"\\xC9 orchard per\\xF2 privo di difetti? Purtroppo no, infatti come la maggior parte dei mini giochi il divertimento va scemando sempre pi\\xF9 andando a sostituirsi a quella sensazione di stare risolvendo un \\u201Csemplice\\u201D esercizio di logica.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"November 18, 2021","writer":"Tia","title":"Orchard","description":"Crea il micro frutteto più fruttuoso, ma attenzione alla frutta marcia","designer":"Mark Tuck","publisher":"GateOnGames","score":3,"mechanisms":["Melding and Splaying","Pattern Building","Solo / Solitaire Game","Tile Placement"],"weight":1,"design":2,"player_count":1,"playing_time":"10min","unboxing_youtbe_id":"iwzA_s9gTnQ","sidebar_votes":[{"title":"Fun","value":3},{"title":"Gameplay","value":1},{"title":"Game flow","value":4},{"title":"Tema","value":2},{"title":"Portabilità","value":5}]}},"previous":null,"next":null},"pageContext":{"id":"424c373a-510b-5611-9d41-3a0bd47f0b98","previousPostId":null,"nextPostId":null}},
    "staticQueryHashes": ["1202985238","2841359383"]}